#!/bin/bash
set -x
set -e

PSQL="psql -v ON_ERROR_STOP=1"

function gen() {
    for PORT in 6012 6013 6014 6015 6016 6017; do
        ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into t0(name) values('test');" > log/gen.log 2>&1
        ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into t0(name) values('test');" > log/gen.log 2>&1
        ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into t0(name) values('test');" > log/gen.log 2>&1
        ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into t0(name) values('test');" > log/gen.log 2>&1
        ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into t0(name) values('test');" > log/gen.log 2>&1
        ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into t0(name) values('test');" > log/gen.log 2>&1
        ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into t0(name) values('test');" > log/gen.log 2>&1
        ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into t0(name) values('test');" > log/gen.log 2>&1
        ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into t0(name) values('test');" > log/gen.log 2>&1
        ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into t0(name) values('test');" > log/gen.log 2>&1
    done
    PORT=6012
    ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into d0(name) values('test');" > log/gen.log 2>&1
    ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into d0(name) values('test');" > log/gen.log 2>&1
    ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into d0(name) values('test');" > log/gen.log 2>&1
    ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into d0(name) values('test');" > log/gen.log 2>&1
    ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into d0(name) values('test');" > log/gen.log 2>&1
    ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into d0(name) values('test');" > log/gen.log 2>&1
    ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into d0(name) values('test');" > log/gen.log 2>&1
    ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into d0(name) values('test');" > log/gen.log 2>&1
    ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into d0(name) values('test');" > log/gen.log 2>&1
    ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/db1 -c "insert into d0(name) values('test');" > log/gen.log 2>&1
}

# Clean any existing process
killall kuvasz-streamer || true

# Pull latest minor version
export REGISTRY=docker.io
# for VER in 12 13 14 15 16 17; do
#     docker pull ${REGISTRY}/postgres:${VER}
# done

# Start postgres containers
docker compose down
docker compose up -d

# Wait until all instances are ready
for PORT in 6012 6013 6014 6015 6016 6017; do
    until pg_isready -h 127.0.0.1 -p ${PORT} -d postgres -U postgres;
        do sleep 1;
    done;
done

# Create user and databases
for PORT in 6012 6013 6014 6015 6016 6017; do
    ${PSQL} postgres://postgres:postgres@127.0.0.1:${PORT}/postgres -c "create user kuvasz password 'kuvasz' createdb replication;"
    ${PSQL} postgres://postgres:postgres@127.0.0.1:${PORT}/postgres -c "GRANT EXECUTE ON FUNCTION pg_replication_origin_create(text) TO kuvasz;"
    ${PSQL} postgres://postgres:postgres@127.0.0.1:${PORT}/postgres -c "GRANT EXECUTE ON FUNCTION pg_replication_origin_session_setup(text) TO kuvasz;"
    ${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:${PORT}/postgres -f database/source.sql
done
${PSQL} postgres://kuvasz:kuvasz@127.0.0.1:6012/postgres -f database/dest.sql

# Start generating data
gen

cp kuvasz-streamer-gold.db kuvasz-streamer.db
../kuvasz-streamer --conf=./conf/kuvasz-streamer-sqlite.toml > log/kuvasz-streamer.log 2>&1 &
sleep 5

robot --exitonfailure -d log testsuite/50*
cp log/log.html log/report.html ../docs/
docker compose down
killall kuvasz-streamer
